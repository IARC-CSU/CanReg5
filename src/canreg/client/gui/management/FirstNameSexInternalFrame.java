/**
 * CanReg5 - a tool to input, store, check and analyse cancer registry data.
 * Copyright (C) 2008-2015  International Agency for Research on Cancer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Morten Johannes Ervik, CSU/IARC, ervikm@iarc.fr
 */

/*
 * FirstNameSexInternalFrame.java
 *
 * Created on 29 February 2008, 15:12
 */
package canreg.client.gui.management;

import canreg.client.CanRegClientApp;
import canreg.client.gui.tools.globalpopup.TechnicalError;
import canreg.common.database.NameSexRecord;
import canreg.server.database.RecordLockedException;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author  morten
 */
public class FirstNameSexInternalFrame extends javax.swing.JInternalFrame {

    private static final Logger LOGGER = Logger.getLogger(FirstNameSexInternalFrame.class.getName());
    /** Creates new form FirstNameSexInternalFrame */
    public FirstNameSexInternalFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        showFirstnameSexButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        namesTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        recreateDatabaseOfFirstnameSexButton = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getResourceMap(FirstNameSexInternalFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFrameIcon(resourceMap.getIcon("Form.frameIcon")); // NOI18N
        setName("Form"); // NOI18N
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getActionMap(FirstNameSexInternalFrame.class, this);
        showFirstnameSexButton.setAction(actionMap.get("showFirstNamesBySexAction")); // NOI18N
        showFirstnameSexButton.setText(resourceMap.getString("showFirstnameSexButton.text")); // NOI18N
        showFirstnameSexButton.setName("showFirstnameSexButton"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        namesTextArea.setColumns(20);
        namesTextArea.setRows(5);
        namesTextArea.setName("namesTextArea"); // NOI18N
        jScrollPane1.setViewportView(namesTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(showFirstnameSexButton, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(showFirstnameSexButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        recreateDatabaseOfFirstnameSexButton.setAction(actionMap.get("recreateNameSexDatabase")); // NOI18N
        recreateDatabaseOfFirstnameSexButton.setName("recreateDatabaseOfFirstnameSexButton"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(recreateDatabaseOfFirstnameSexButton, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(recreateDatabaseOfFirstnameSexButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @return
     */
    @Action
    public Task recreateNameSexDatabase() {
        recreateDatabaseOfFirstnameSexButton.setEnabled(false);
        return new RecreateNameSexDatabaseTask(org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class));
    }

    private class RecreateNameSexDatabaseTask extends org.jdesktop.application.Task<Object, Void> {
        String line;
        BufferedReader br;
        
        RecreateNameSexDatabaseTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to RecreateNameSexDatabaseTask fields, here.
            super(app);
            URL nameSexFileURL = this.getClass().getResource("/canreg/client/gui/management/resources/namesex.tsv");
            try {
                canreg.client.CanRegClientApp.getApplication().clearNameSexTable(null);
                FileReader fileReader = new FileReader(canreg.common.Tools.getTempFileFromURL(nameSexFileURL));
                br = new BufferedReader(fileReader);
                line = br.readLine();
            } catch (IOException ex) {
                LOGGER.log(Level.SEVERE, null, ex);
                new TechnicalError().errorDialog();
            }
        }
        
        @Override protected Object doInBackground() throws SecurityException, IOException, SQLException, RecordLockedException {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            
            while (line!= null){

            String[] strings = line.split("\t");

                if (strings.length == 2) {
                    String name = strings[0];
                    int sex = Integer.parseInt(strings[1]);
                    NameSexRecord nsr = new NameSexRecord();
                    nsr.setName(name);
                    nsr.setSex(sex);
                    canreg.client.CanRegClientApp.getApplication().saveRecord(nsr, null);
                }

            line = br.readLine();
            }
            
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            try {
                // Runs on the EDT.  Update the GUI based on
                // the result computed by doInBackground().
                recreateDatabaseOfFirstnameSexButton.setEnabled(true);
                br.close();
                JOptionPane.showInternalMessageDialog(CanRegClientApp.getApplication().getMainFrame().getContentPane(), java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/FirstNameSexInternalFrame").getString("SUCCESSFULLY_RESTORED_DEFAULT_DATABASE"), java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/FirstNameSexInternalFrame").getString("DATABASE_OF_NAMES_RESTORED."), JOptionPane.INFORMATION_MESSAGE);
               
            } catch (IOException ex) {
                LOGGER.log(Level.SEVERE, null, ex);
                new TechnicalError().errorDialog();
            }
        }
    }

    /**
     * 
     */
    @Action
    public void showFirstNamesBySexAction() {
        try {
            Map<String, Integer> map = canreg.client.CanRegClientApp.getApplication().getNameSexTables(null);
            String[] names = new String[3];
            names[0]="";
            names[1]="";
            names[2]="";
            String maleHeader ="----------\n-  "+java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/FirstNameSexInternalFrame").getString("MALE")+"  - \n----------\n\n";
            String femaleHeader ="----------\n- "+java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/FirstNameSexInternalFrame").getString("FEMALE")+" - \n----------\n\n";
            String unisexHeader ="----------\n- "+java.util.ResourceBundle.getBundle("canreg/client/gui/management/resources/FirstNameSexInternalFrame").getString("UNISEX")+" - \n----------\n\n";
            Set<String> set = map.keySet();
            for(String name:set){
                Integer sex = map.get(name);
                // both 9 and 3 codes for unisex
                if (sex == 9){
                    sex = 3;
                }
                names[sex-1]+=name+"\n";
            }
            namesTextArea.setText(maleHeader+names[0]+"\n"+
                    femaleHeader+names[1]+"\n"+
                    unisexHeader+names[2]);
            namesTextArea.setCaretPosition(0);
        } catch (SecurityException | RemoteException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
            new TechnicalError().errorDialog();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea namesTextArea;
    private javax.swing.JButton recreateDatabaseOfFirstnameSexButton;
    private javax.swing.JButton showFirstnameSexButton;
    // End of variables declaration//GEN-END:variables
    
}
