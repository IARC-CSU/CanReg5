/**
 * CanReg5 - a tool to input, store, check and analyse cancer registry data.
 * Copyright (C) 2008-2015  International Agency for Research on Cancer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Morten Johannes Ervik, CSU/IARC, ervikm@iarc.fr
 */


/*
 * PersonSearchVariablesPanel.java
 *
 * Created on 21 October 2008, 14:02
 */
package canreg.client.gui.management;

import canreg.common.DatabaseVariablesListElement;
import canreg.common.Globals;
import canreg.common.PersonSearchVariable;
import canreg.common.Tools;
import canreg.common.qualitycontrol.DefaultPersonSearch;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import org.jdesktop.application.Action;
import org.w3c.dom.Document;

/**
 *
 * @author  ervikm
 */
public class PersonSearchVariablesPanel extends javax.swing.JPanel implements ActionListener {

    private Document doc;
    private DatabaseVariablesListElement[] variablesInDB;
    private LinkedList<PersonSearchVariablePanel> personSearchVariablePanelList;
    private DefaultPersonSearch searcher;

    /** Creates new form PersonSearchVariablesPanel */
    public PersonSearchVariablesPanel() {
        initComponents();
        setEditable(false);
    }

    /**
     * 
     * @param doc
     */
    public void setDoc(Document doc) {
        this.doc = doc;
        variablesInDB = Tools.getVariableListElements(doc, Globals.NAMESPACE, Globals.PATIENT_TABLE_NAME);
        PersonSearchVariable[] searchVariables = Tools.getPersonSearchVariables(doc, Globals.NAMESPACE);
        searcher = new DefaultPersonSearch(variablesInDB);
        searcher.setSearchVariables(searchVariables);
        searcher.setThreshold(Tools.getPersonSearchMinimumMatch(doc, Globals.NAMESPACE));
        setSearcher(searcher);
    }

    private void setSearcher(DefaultPersonSearch searcher) {
        PersonSearchVariable[] searchVariables = searcher.getPersonSearchVariables();
        personSearchVariablePanelList = new LinkedList<PersonSearchVariablePanel>();
        variablesListPanel.removeAll();
        for (PersonSearchVariable searchVariable : searchVariables) {
            PersonSearchVariablePanel psvp = new PersonSearchVariablePanel();
            addPersonSearchVariablePanel(psvp);
            psvp.setPersonSearchVariable(searchVariable);
        }
        thresholdTextField.setText(searcher.getThreshold() + "");
        setVariableListEnabled(false);
    }

    /**
     * 
     * @return
     */
    public DefaultPersonSearch getSearcher() {
        return buildSearcher();
    }

    private DefaultPersonSearch buildSearcher() {
        DefaultPersonSearch newPersonSearch = null;
        if (!defaultSettingsToggleButton.isSelected()||!defaultSettingsToggleButton.isVisible()) {
            newPersonSearch = new DefaultPersonSearch(variablesInDB);
            Component[] components = variablesListPanel.getComponents();
            PersonSearchVariable[] variables = new PersonSearchVariable[components.length];
            int i = 0;
            for (Component component : components) {
                PersonSearchVariablePanel psvp = (PersonSearchVariablePanel) component;
                variables[i] = psvp.getPersonSearchVariable();
                i++;
            }
            newPersonSearch.setSearchVariables(variables);
            float threshold = 70;
            try {
                threshold = Float.parseFloat(thresholdTextField.getText());
            } catch (NumberFormatException nfe) {
            }
            newPersonSearch.setThreshold(threshold);
        }
        return newPersonSearch;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addVariableButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        variablesListPanel = new javax.swing.JPanel();
        thresholdTextField = new javax.swing.JTextField();
        minumumMatchLabel = new javax.swing.JLabel();
        percentLabel = new javax.swing.JLabel();
        defaultSettingsToggleButton = new javax.swing.JToggleButton();

        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getActionMap(PersonSearchVariablesPanel.class, this);
        addVariableButton.setAction(actionMap.get("addVariableAction")); // NOI18N
        addVariableButton.setEnabled(false);
        addVariableButton.setName("addVariableButton"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setBorder(null);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        variablesListPanel.setName("variablesListPanel"); // NOI18N
        variablesListPanel.setLayout(new java.awt.GridLayout(0, 1, 2, 0));
        jScrollPane1.setViewportView(variablesListPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
        );

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getResourceMap(PersonSearchVariablesPanel.class);
        thresholdTextField.setText(resourceMap.getString("thresholdTextField.text")); // NOI18N
        thresholdTextField.setEnabled(false);
        thresholdTextField.setName("thresholdTextField"); // NOI18N

        minumumMatchLabel.setText(resourceMap.getString("minumumMatchLabel.text")); // NOI18N
        minumumMatchLabel.setName("minumumMatchLabel"); // NOI18N

        percentLabel.setText(resourceMap.getString("percentLabel.text")); // NOI18N
        percentLabel.setName("percentLabel"); // NOI18N

        defaultSettingsToggleButton.setAction(actionMap.get("toggleDefaultSettingsAction")); // NOI18N
        defaultSettingsToggleButton.setSelected(true);
        defaultSettingsToggleButton.setName("defaultSettingsToggleButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(minumumMatchLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defaultSettingsToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addVariableButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(percentLabel)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minumumMatchLabel)
                    .addComponent(percentLabel)
                    .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVariableButton)
                    .addComponent(defaultSettingsToggleButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     */
    @Action
    public void addVariableAction() {
        PersonSearchVariablePanel psvp = new PersonSearchVariablePanel();
        addPersonSearchVariablePanel(psvp);
    }

    private void addPersonSearchVariablePanel(PersonSearchVariablePanel psvp) {
        psvp.setActionListener(this);
        psvp.setDatabaseVariables(variablesInDB);
        variablesListPanel.add(psvp);
        personSearchVariablePanelList.add(psvp);
        psvp.setVisible(true);
        variablesListPanel.revalidate();
        variablesListPanel.repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVariableButton;
    private javax.swing.JToggleButton defaultSettingsToggleButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minumumMatchLabel;
    private javax.swing.JLabel percentLabel;
    private javax.swing.JTextField thresholdTextField;
    private javax.swing.JPanel variablesListPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        if ("remove".equalsIgnoreCase(command)) {
            variablesListPanel.remove((Component) e.getSource());
            personSearchVariablePanelList.remove((PersonSearchVariablePanel) e.getSource());
            variablesListPanel.revalidate();
            variablesListPanel.repaint();
        }
    }

    @Action
    public void toggleDefaultSettingsAction() {
        setEditable(!defaultSettingsToggleButton.isSelected());
    }

    private void setVariableListEnabled(boolean b) {
        if (personSearchVariablePanelList != null) {
            for (PersonSearchVariablePanel panel : personSearchVariablePanelList) {
                panel.setActive(b);
            }
        }
    }

    public void setDefaultButtonVisibility(boolean visible) {
        defaultSettingsToggleButton.setVisible(visible);
        setEditable(!visible);
    }

    private void setEditable(boolean editable) {
        jPanel1.setEnabled(editable);
        thresholdTextField.setEnabled(editable);
        setVariableListEnabled(editable);
        addVariableButton.setEnabled(editable);
    }
}
