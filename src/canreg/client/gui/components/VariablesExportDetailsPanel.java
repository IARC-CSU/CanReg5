/**
 * CanReg5 - a tool to input, store, check and analyse cancer registry data.
 * Copyright (C) 2008-2015  International Agency for Research on Cancer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Morten Johannes Ervik, CSU/IARC, ervikm@iarc.fr
 */

/*
 * VariablesExportDetailsPanel.java
 *
 * Created on 23 June 2008, 14:07
 */
package canreg.client.gui.components;

import canreg.common.DatabaseVariablesListElement;
import canreg.common.Globals;
import canreg.common.database.Dictionary;

/**
 *
 * @author  ervikm
 */
public class VariablesExportDetailsPanel extends javax.swing.JPanel {

    private DatabaseVariablesListElement variable;
    private Dictionary dictionary;

    /** Creates new form VariablesExportDetailsPanel */
    public VariablesExportDetailsPanel() {
        initComponents();
    }

    private void setVariableName(String variableName) {
        variableNameLabel.setText(variableName);
    }

    private void setVariableType(String type) {

        if (type.equalsIgnoreCase(Globals.VARIABLE_TYPE_DICTIONARY_NAME)) {
            dictionaryDescriptionCheckBox.setVisible(true);
            if (variable != null && variable.isDictionaryCompound()) {
                dictionaryCategoryCheckBox.setEnabled(true);
            } else {
                dictionaryCategoryCheckBox.setEnabled(false);
            }
        } else {
            dictionaryCategoryCheckBox.setEnabled(false);
            dictionaryDescriptionCheckBox.setEnabled(false);
        }
    }

    /**
     * 
     * @param variable
     */
    public void setVariable(DatabaseVariablesListElement variable) {
        this.variable = variable;
        setVariableName(variable.getFullName());
        setVariableType(variable.getVariableType());
    }

    /**
     * 
     * @param bool
     */
    public void setDataCheckBox(boolean bool) {
        dataCheckBox.setSelected(bool);
    }

    /**
     * 
     * @return
     */
    public boolean[] getCheckboxes() {
        return new boolean[]{dataCheckBox.isSelected(), dictionaryCategoryCheckBox.isSelected(), dictionaryDescriptionCheckBox.isSelected()};
    }

    public DatabaseVariablesListElement getVariable() {
        return variable;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        variableNameLabel = new javax.swing.JLabel();
        dataCheckBox = new javax.swing.JCheckBox();
        dictionaryCategoryCheckBox = new javax.swing.JCheckBox();
        dictionaryDescriptionCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(canreg.client.CanRegClientApp.class).getContext().getResourceMap(VariablesExportDetailsPanel.class);
        variableNameLabel.setText(resourceMap.getString("variableNameLabel.text")); // NOI18N
        variableNameLabel.setName("variableNameLabel"); // NOI18N

        dataCheckBox.setText(resourceMap.getString("dataCheckBox.text")); // NOI18N
        dataCheckBox.setToolTipText(resourceMap.getString("dataCheckBox.toolTipText")); // NOI18N
        dataCheckBox.setName("dataCheckBox"); // NOI18N

        dictionaryCategoryCheckBox.setText(resourceMap.getString("dictionaryCategoryCheckBox.text")); // NOI18N
        dictionaryCategoryCheckBox.setToolTipText(resourceMap.getString("dictionaryCategoryCheckBox.toolTipText")); // NOI18N
        dictionaryCategoryCheckBox.setEnabled(false);
        dictionaryCategoryCheckBox.setName("dictionaryCategoryCheckBox"); // NOI18N

        dictionaryDescriptionCheckBox.setText(resourceMap.getString("dictionaryDescriptionCheckBox.text")); // NOI18N
        dictionaryDescriptionCheckBox.setToolTipText(resourceMap.getString("dictionaryDescriptionCheckBox.toolTipText")); // NOI18N
        dictionaryDescriptionCheckBox.setEnabled(false);
        dictionaryDescriptionCheckBox.setName("dictionaryDescriptionCheckBox"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(variableNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dictionaryCategoryCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dictionaryDescriptionCheckBox)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(dataCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dictionaryCategoryCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dictionaryDescriptionCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(variableNameLabel)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox dataCheckBox;
    private javax.swing.JCheckBox dictionaryCategoryCheckBox;
    private javax.swing.JCheckBox dictionaryDescriptionCheckBox;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel variableNameLabel;
    // End of variables declaration//GEN-END:variables

    void setDictionary(Dictionary dictionary) {
        this.dictionary = dictionary;
        if (dictionary != null){
            if (dictionary.isCompoundDictionary()){
                 dictionaryCategoryCheckBox.setEnabled(true);
            }
            dictionaryDescriptionCheckBox.setEnabled(true);
        }
    }

    /**
     * @return the dictionary
     */
    public Dictionary getDictionary() {
        return dictionary;
    }

    public void showOnlyDataColumn() {
        dictionaryCategoryCheckBox.setVisible(false);
        dictionaryDescriptionCheckBox.setVisible(false);
    }

    public boolean isDataCheckBoxSelected() {
        return dataCheckBox.isSelected();
    }
}
