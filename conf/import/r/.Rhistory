#combinations sites and extreme value
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
View(cco.qeeg.data)
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/p.ca.R')
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/cco.qeeg.R')
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/cco.qeeg.R')
cco.qeeg.data <- cco.qeeg(ar)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/p.ca.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/p.ca.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/cco.qeeg.R')
View(cco.qeeg.data)
library(baj)
library(DescTools)
library(stringr)
library(stremo)
library(XML)
ar <- rr("C://ProgramData//BrainMaster//Studies//QEEG 15 bands//QP AND jEWEL Analysis_EC_2017.02.11_17.17.33.xml")
cco.qeeg.data <- cco.qeeg(ar)
#Remove bandwidth coherence*/
rv.cco.qeeg.data <- rv.cco.qeeg(FALSE,#D
FALSE,#T
TRUE,#A
TRUE,#LoB
TRUE,#B
TRUE,#HiB
TRUE,#G
TRUE,#A1
TRUE,#A2
FALSE,
FALSE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
cco.qeeg.data)
View(rv.cco.qeeg.data)
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
View(f.cco.qeeg.data)
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.cco.qeeg.R')
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
View(mir.cco.qeeg.data)
rv.cco.qeeg.data <- rv.cco.qeeg(TRUE,#D
TRUE,#T
TRUE,#A
TRUE,#LoB
TRUE,#B
TRUE,#HiB
TRUE,#G
TRUE,#A1
TRUE,#A2
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
cco.qeeg.data)
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
View(mir.cco.qeeg.data)
View(max.c.cco.qeeg.data)
View(min.c.cco.qeeg.data)
View(aux.data)
View(aux.data)
View(combinations)
View(min.c.cco.qeeg.data)
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.cco.qeeg.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.cco.qeeg.R')
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
View(f.cco.qeeg.data)
f.cco.qeeg.data <- f.cco.qeeg(rv.cco.qeeg.data,cco.qeeg.data)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.cco.qeeg.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.min.max.cco.qeeg.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.min.max.cco.qeeg.R')
f.min.cco.qeeg.data <- f.min.max.cco.qeeg(min.c.cco.qeeg.data)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.min.max.cco.qeeg.R')
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.min.max.cco.qeeg.R')
f.min.cco.qeeg.data <- f.min.max.cco.qeeg(min.c.cco.qeeg.data)
mir.cco.qeeg.data <- mir.cco(rv.cco.qeeg.data,cco.qeeg.data)
#Intermediate script
min.c.cco.qeeg.data <- mm.c.cco(mir.cco.qeeg.data,"min")
#Intermediate script
max.c.cco.qeeg.data <- mm.c.cco(mir.cco.qeeg.data,"max")
f.cco.qeeg.data <- f.cco.qeeg(min.c.cco.qeeg.data, max.c.cco.qeeg.data)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/f.cco.qeeg.R')
f.cco.qeeg.data <- f.cco.qeeg(min.c.cco.qeeg.data, max.c.cco.qeeg.data)
View(f.cco.qeeg.data)
f.min.cco.qeeg.data <- f.min.max.cco.qeeg(min.c.cco.qeeg.data)
f.max.cco.qeeg.data <- f.min.max.cco.qeeg(max.c.cco.qeeg.data)
View(f.max.cco.qeeg.data)
View(f.min.cco.qeeg.data)
View(f.cco.qeeg.data)
View(f.max.cco.qeeg.data)
library(baj)
library(DescTools)
library(stringr)
library(stremo)
library(XML)
ar <- rr("C://ProgramData//BrainMaster//Studies//Unsolved Issues//Analysis_EC_2018.04.10_12.02.01.xml")
ar <- rr("C://ProgramData//BrainMaster//Studies//Unsolved Issues//Analysis_EC_2018.04.10_12.02.01.xml")
sm.qeeg.data <- sm(ar)
##Remove bands
#INTERMEDIATE SCRIPT
rv.sm.qeeg.data <- rv.sm.qeeg(TRUE, #Delta.max
TRUE, #Theta.max
TRUE, #Alpha.max
TRUE, #Lobeta.max
TRUE, #Beta.max
TRUE, #Hibeta.max
TRUE, #Gamma.max
TRUE, #Alpha1.max
TRUE, #Alpha2.max
TRUE, #Delta.min
TRUE, #Theta.min
TRUE, #Alpha.min
TRUE, #Lobeta.min
TRUE, #Beta.min
TRUE, #Hibeta.min
TRUE, #Gamma.min
TRUE, #Alpha1.min
TRUE, #Alpha2.min
sm.qeeg.data)
##ZScores for + and - heads
#NO LONGER USED
#ttb.qeeg.data<-ttb(rv.sm.qeeg.data)
##15 bandwidth heads
#INTERMEDIATE SCRIPT
f.b.s.qeeg.data <- fbs(rv.sm.qeeg.data)
##9 bandwidth heads
nine.bands.qeeg.data <- nine.bands.qeeg(f.b.s.qeeg.data)
#EXPERIMENTAL DZM/JEWEL DATABASE
#DzM Slow Wave Inhibits Symptoms Head
#return a list with 2 data.frames
swih.data <- swih(f.b.s.qeeg.data)
# first has the numbers
# access to data.frame #1
swih.data.numbers <- swih.data[[1]]
# second has the letters
swih.data.bands <- swih.data[[2]]
ar <- rr("C://ProgramData//BrainMaster//Studies//Unsolved Issues//Analysis_EC_2018.04.10_12.02.01.xml")
test.report("qeeg",ar)
rd.brod.qeeg <- sLRT.qeeg.brod(ar)
rd.roi.qeeg <- sLRT.qeeg.roi(ar)
ar <- rr("C://ProgramData//BrainMaster//Studies//Unsolved Issues//Analysis_EC_2018.04.10_12.02.01.xml")
sm.qeeg.data <- sm(ar)
ar.qeeg.cco <- rr("C://ProgramData//BrainMaster//Studies//QEEG 15 bands//CAC-A-JQ-Analysis_EC_2017.06.02_10.28.54.xml")
cco.qeeg.data <- cco.qeeg(ar.qeeg.cco)
library(baj)
library(DescTools)
library(stringr)
library(stremo)
library(XML)
ar <- rr("C://ProgramData//BrainMaster//Studies//QEEG 15 bands//CAC-A-JQ-Analysis_EC_2017.06.02_10.28.54.xml")
sm.qeeg.data <- sm(ar)
rv.sm.qeeg.data <- rv.sm.qeeg(TRUE, #Delta.max
TRUE, #Theta.max
TRUE, #Alpha.max
TRUE, #Lobeta.max
TRUE, #Beta.max
TRUE, #Hibeta.max
TRUE, #Gamma.max
TRUE, #Alpha1.max
TRUE, #Alpha2.max
TRUE, #Delta.min
TRUE, #Theta.min
TRUE, #Alpha.min
TRUE, #Lobeta.min
TRUE, #Beta.min
TRUE, #Hibeta.min
TRUE, #Gamma.min
TRUE, #Alpha1.min
TRUE, #Alpha2.min
sm.qeeg.data)
f.b.s.qeeg.data <- fbs(rv.sm.qeeg.data)
##9 bandwidth heads
nine.bands.qeeg.data <- nine.bands.qeeg(f.b.s.qeeg.data)
#EXPERIMENTAL DZM/JEWEL DATABASE
#DzM Slow Wave Inhibits Symptoms Head
#return a list with 2 data.frames
swih.data <- swih(f.b.s.qeeg.data)
# first has the numbers
# access to data.frame #1
swih.data.numbers <- swih.data[[1]]
# second has the letters
swih.data.bands <- swih.data[[2]]
#DzM Fast Wave Inhibits Symptoms Head
fwih.data <- fwih(f.b.s.qeeg.data)
# first has the numbers
# access to data.frame #1
fwih.data.numbers <- fwih.data[[1]]
# second has the letters
fwih.data.bands <- fwih.data[[2]]
#DzM Rewards Head
rewardsh.data <- rewardsh(f.b.s.qeeg.data, swih.data.numbers, fwih.data.numbers)
rewardsh.data.unadjusted <- as.data.frame(t(rewardsh.data[[1]]), stringsAsFactors=FALSE)
# first has the numbers
# access to data.frame #1
rewardsh.data.numbers <- rewardsh.data[[1]]
# second has the letters
rewardsh.data.bands <- rewardsh.data[[2]]
ar.qeeg.cco <- rr("C://ProgramData//BrainMaster//Studies//QEEG 15 bands//CAC-A-JQ-Analysis_EC_2017.06.02_10.28.54.xml")
cco.qeeg.data <- cco.qeeg(ar.qeeg.cco)
#Remove bandwidth coherence*/
rv.cco.qeeg.data <- rv.cco.qeeg(TRUE,#D
TRUE,#T
TRUE,#A
TRUE,#LoB
TRUE,#B
TRUE,#HiB
TRUE,#G
TRUE,#A1
TRUE,#A2
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
TRUE,
cco.qeeg.data)
#NO LONGER USED
#t.h.cco.qeeg.data <- t.h.cco(rv.cco.qeeg.data)
#t.h.cco.qeeg.data.adjusted <- as.data.frame(t(t.h.cco.qeeg.data), stringsAsFactors=FALSE)
#NO LONGER USED
#f.t.h.cco.qeeg.data <- f.t.h.cco(t.h.cco.qeeg.data, rv.cco.qeeg.data)
#f.t.h.cco.qeeg.data.adjusted <- as.data.frame(t(f.t.h.cco.qeeg.data), stringsAsFactors=FALSE)
#Intermediate script
mir.cco.qeeg.data <- mir.cco(rv.cco.qeeg.data,cco.qeeg.data)
#Intermediate script
min.c.cco.qeeg.data <- mm.c.cco(mir.cco.qeeg.data,"min")
#Intermediate script
max.c.cco.qeeg.data <- mm.c.cco(mir.cco.qeeg.data,"max")
#The 171 most absolute connections
f.cco.qeeg.data <- f.cco.qeeg(min.c.cco.qeeg.data, max.c.cco.qeeg.data)
#The 171 most negative connections
f.min.cco.qeeg.data <- f.min.max.cco.qeeg(min.c.cco.qeeg.data)
#The 171 most positive connections
f.max.cco.qeeg.data <- f.min.max.cco.qeeg(max.c.cco.qeeg.data)
View(rewardsh.data.unadjusted)
View(rewardsh.data.numbers)
View(f.cco.qeeg.data)
View(f.max.cco.qeeg.data)
View(f.b.s.qeeg.data)
library(baj)
library(DescTools)
library(stringr)
library(stremo)
library(XML)
ar <- rr("C://ProgramData//BrainMaster//Studies//QEEG 15 bands//WEAK Analysis_EC_2018.08.07_09.05.52.xml")
sm.qeeg.data <- sm(ar)
##Remove bands
#INTERMEDIATE SCRIPT
rv.sm.qeeg.data <- rv.sm.qeeg(TRUE, #Delta.max
TRUE, #Theta.max
TRUE, #Alpha.max
TRUE, #Lobeta.max
TRUE, #Beta.max
TRUE, #Hibeta.max
TRUE, #Gamma.max
TRUE, #Alpha1.max
TRUE, #Alpha2.max
TRUE, #Delta.min
TRUE, #Theta.min
TRUE, #Alpha.min
TRUE, #Lobeta.min
TRUE, #Beta.min
TRUE, #Hibeta.min
TRUE, #Gamma.min
TRUE, #Alpha1.min
TRUE, #Alpha2.min
sm.qeeg.data)
f.b.s.qeeg.data <- fbs(rv.sm.qeeg.data)
##9 bandwidth heads
nine.bands.qeeg.data <- nine.bands.qeeg(f.b.s.qeeg.data)
View(nine.bands.qeeg.data)
View(f.b.s.qeeg.data)
rewardsh.data <- rewardsh(f.b.s.qeeg.data, swih.data.numbers, fwih.data.numbers)
rewardsh.data.unadjusted <- as.data.frame(t(rewardsh.data[[1]]), stringsAsFactors=FALSE)
# first has the numbers
# access to data.frame #1
rewardsh.data.numbers <- rewardsh.data[[1]]
# second has the letters
rewardsh.data.bands <- rewardsh.data[[2]]
swih.data <- swih(f.b.s.qeeg.data)
# first has the numbers
# access to data.frame #1
swih.data.numbers <- swih.data[[1]]
# second has the letters
swih.data.bands <- swih.data[[2]]
#DzM Fast Wave Inhibits Symptoms Head
fwih.data <- fwih(f.b.s.qeeg.data)
# first has the numbers
# access to data.frame #1
fwih.data.numbers <- fwih.data[[1]]
# second has the letters
fwih.data.bands <- fwih.data[[2]]
rewardsh.data <- rewardsh(f.b.s.qeeg.data, swih.data.numbers, fwih.data.numbers)
rewardsh.data.unadjusted <- as.data.frame(t(rewardsh.data[[1]]), stringsAsFactors=FALSE)
# first has the numbers
# access to data.frame #1
rewardsh.data.numbers <- rewardsh.data[[1]]
# second has the letters
rewardsh.data.bands <- rewardsh.data[[2]]
View(rewardsh.data.numbers)
View(rewardsh.data.unadjusted)
View(rewardsh.data.bands)
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/rew.aux.R')
debugSource('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/rewardsh.R')
rewardsh.data <- rewardsh(f.b.s.qeeg.data, swih.data.numbers, fwih.data.numbers)
View(rew.letter.data)
View(rew.number.data)
View(f.h.eo.dz.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(aux.rew.data)
View(max.4)
View(rew.number.data)
View(f.h.eo.dz.data)
View(f.h.eo.dz.data)
View(max.1)
View(max.2)
View(max.2)
View(max.3)
View(max.3)
View(max.4)
View(max.4)
View(max.1)
View(max.2)
View(max.3)
View(max.3)
source('C:/Work/John Demos/Repos/R repos/R_Development/Scripts/rewardsh.R')
#Libraries nedeed
library("XML")
library("plyr")
library("stringr")
library("dplyr")
library("RJSONIO")
library("jsonlite")
library("anchors")
library("lubridate")
options(scipen = 999)
Args <- commandArgs(TRUE)
#Find the path to the params file
#==================================================
initial.options <- commandArgs(trailingOnly = FALSE)
#Parameters
JSON.path <- "-paramsFile="
# paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
paramsJSON <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
file.arg.name <- "--file="
# script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.name <- "C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
cat(paste("script.name:", script.name, "\n", sep = ""))
cat(paste("dirname(script.name):", dirname(script.name), "\n", sep = ""))
# #Load all the scripts
file.sources <- list.files(dirname(script.name),
pattern="*.R$",
full.names=FALSE,
ignore.case=TRUE)
file.sources <- file.sources[!(file.sources == script.name)]
cat(paste("file.sources:", file.sources, "\n", sep = ""))
sapply(file.sources,source,.GlobalEnv)
file.sources <- list.files(dirname(script.name),
pattern="*.R$",
full.names=TRUE,
ignore.case=TRUE)
file.sources <- file.sources[!(file.sources == script.name)]
cat(paste("file.sources:", file.sources, "\n", sep = ""))
sapply(file.sources,source,.GlobalEnv)
library("XML")
library("plyr")
library("stringr")
library("dplyr")
library("RJSONIO")
library("jsonlite")
library("anchors")
library("lubridate")
options(scipen = 999)
Args <- commandArgs(TRUE)
#Find the path to the params file
#==================================================
initial.options <- commandArgs(trailingOnly = FALSE)
#Parameters
JSON.path <- "-paramsFile="
# paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
paramsJSON <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
file.arg.name <- "--file="
# script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.name <- "C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
cat(paste("script.name:", script.name, "\n", sep = ""))
cat(paste("dirname(script.name):", dirname(script.name), "\n", sep = ""))
#Set locale to UTF-8
#Sys.setlocale("LC_CTYPE", "UTF-8")
# #Load all the scripts
file.sources <- list.files(dirname(script.name),
pattern="*.R$",
full.names=TRUE,
ignore.case=TRUE)
file.sources <- file.sources[!(file.sources == script.name)]
cat(paste("file.sources:", file.sources, "\n", sep = ""))
sapply(file.sources,source,.GlobalEnv)
library("XML")
library("plyr")
library("stringr")
library("dplyr")
library("RJSONIO")
library("jsonlite")
library("anchors")
library("lubridate")
options(scipen = 999)
Args <- commandArgs(TRUE)
#Find the path to the params file
#==================================================
initial.options <- commandArgs(trailingOnly = FALSE)
#Parameters
JSON.path <- "-paramsFile="
# paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
paramsJSON <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
file.arg.name <- "--file="
# script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.name <- "C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
cat(paste("script.name:", script.name, "\n", sep = ""))
cat(paste("dirname(script.name):", dirname(script.name), "\n", sep = ""))
#Set locale to UTF-8
#Sys.setlocale("LC_CTYPE", "UTF-8")
# #Load all the scripts
file.sources <- list.files(dirname(script.name),
pattern="*.R$",
full.names=FALSE,
ignore.case=TRUE)
file.sources <- file.sources[!(file.sources == basename(script.name))]
cat(paste("file.sources:", file.sources, "\n", sep = ""))
sapply(file.sources,source,.GlobalEnv)
library("XML")
library("plyr")
library("stringr")
library("dplyr")
library("RJSONIO")
library("jsonlite")
library("anchors")
library("lubridate")
options(scipen = 999)
Args <- commandArgs(TRUE)
#Find the path to the params file
#==================================================
initial.options <- commandArgs(trailingOnly = FALSE)
#Parameters
JSON.path <- "-paramsFile="
# paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
paramsJSON <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
file.arg.name <- "--file="
# script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.name <- "C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
cat(paste("script.name:", script.name, "\n", sep = ""))
cat(paste("dirname(script.name):", dirname(script.name), "\n", sep = ""))
#Set locale to UTF-8
#Sys.setlocale("LC_CTYPE", "UTF-8")
# #Load all the scripts
setwd(dirname(script.name))
file.sources <- list.files(dirname(script.name),
pattern="*.R$",
full.names=FALSE,
ignore.case=TRUE)
file.sources <- file.sources[!(file.sources == basename(script.name))]
cat(paste("file.sources:", file.sources, "\n", sep = ""))
sapply(file.sources,source,.GlobalEnv)
doc <- xmlParse(paramsJSON$systemDescriptionXMLPath)
library("XML")
library("plyr")
library("stringr")
library("dplyr")
library("RJSONIO")
library("jsonlite")
library("anchors")
library("lubridate")
options(scipen = 999)
Args <- commandArgs(TRUE)
#Find the path to the params file
#==================================================
initial.options <- commandArgs(trailingOnly = FALSE)
# JSON.path <- "-paramsFile="
JSON.path <- "-paramsFile=C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
# file.arg.name <- "--file="
file.arg.name <- "--file=C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
cat(script.name)
paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
JSON.path <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
JSON.path <- "-paramsFile=C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
paramsJSON <- fromJSON(sub(JSON.path, "", initial.options[grep(JSON.path, initial.options)]))
JSON.path
JSON.path <- "C://Users//Patricio//AppData//Local//Temp//rChecksParams.json"
paramsJSON <- fromJSON(JSON.path)
file.arg.name <- "--file=C://Work//CanReg5//conf//import//r//CR5formatChecks.R"
script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
cat(script.name)
script.name
